{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "build.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "custom-element-eslint-rules.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rules",
          "type": {
            "text": "object"
          },
          "default": "{ \"custom-element/required-attrs\": [\"error\"], \"custom-element/no-deprecated-attrs\": [ \"warn\", { tag: \"radio-group\", attr: \"external\", }, { tag: \"radio-group\", attr: \"deprecated-attribute\", }, ], \"custom-element/constrained-attrs\": [ \"error\", { tag: \"radio-group\", attr: \"variants\", values: [ \"default\", \"primary\", \"success\", \"neutral\", \"warning\", \"danger\", \"text\", ], }, { tag: \"radio-group\", attr: \"external\", values: [\"value1\", \"value2\", \"value3\"], }, { tag: \"radio-group\", attr: \"deprecated-attribute\", values: [\"value1\", \"value2\", \"value3\"], }, { tag: \"radio-group\", attr: \"external2\", values: [\"value4\", \"value5\", \"value6\", \"valueA\", \"valueB\"], }, { tag: \"radio-group\", attr: \"external3\", values: [\"value7\", \"value8\", \"value9\"], }, { tag: \"radio-group\", attr: \"complex\", values: [\"single\", \"multi\"], }, { tag: \"radio-group\", attr: \"complex-union\", values: [\"small\", \"medium\", \"large\", \"extra-small\", \"undefined\"], }, { tag: \"radio-button\", attr: \"target\", values: [\"_blank\", \"_self\", \"_parent\", \"_top\", \"undefined\"], }, ], \"custom-element/no-deprecated-tags\": [ \"warn\", { tag: \"deprecated-element\", }, ], \"custom-element/no-boolean-attr-values\": [ \"error\", { tag: \"radio-group\", attr: \"disabled\", }, { tag: \"radio-button\", attr: \"disabled\", }, { tag: \"my-button\", attr: \"formnovalidate\", }, ], \"@html-eslint/no-duplicate-attrs\": \"off\", \"@html-eslint/no-duplicate-id\": \"off\", \"@html-eslint/no-inline-styles\": \"off\", \"@html-eslint/no-obsolete-tags\": \"off\", \"@html-eslint/no-restricted-attr-values\": \"off\", \"@html-eslint/no-restricted-attrs\": \"off\", \"@html-eslint/no-script-style-type\": \"off\", \"@html-eslint/no-target-blank\": \"off\", \"@html-eslint/require-attrs\": \"off\", \"@html-eslint/require-button-type\": \"off\", \"@html-eslint/require-closing-tags\": \"off\", \"@html-eslint/require-doctype\": \"off\", \"@html-eslint/require-li-container\": \"off\", \"@html-eslint/require-meta-charset\": \"off\", \"@html-eslint/no-multiple-h1\": \"off\", \"@html-eslint/require-lang\": \"off\", \"@html-eslint/require-meta-description\": \"off\", \"@html-eslint/require-open-graph-protocol\": \"off\", \"@html-eslint/require-title\": \"off\", \"@html-eslint/no-abstract-roles\": \"off\", \"@html-eslint/no-accesskey-attrs\": \"off\", \"@html-eslint/no-aria-hidden-body\": \"off\", \"@html-eslint/no-non-scalable-viewport\": \"off\", \"@html-eslint/no-positive-tabindex\": \"off\", \"@html-eslint/no-skip-heading-levels\": \"off\", \"@html-eslint/require-frame-title\": \"off\", \"@html-eslint/require-img-alt\": \"off\", \"@html-eslint/require-meta-viewport\": \"off\", \"@html-eslint/element-newline\": \"off\", \"@html-eslint/id-naming-convention\": \"off\", \"@html-eslint/indent\": \"off\", \"@html-eslint/lowercase\": \"off\", \"@html-eslint/no-extra-spacing-attrs\": \"off\", \"@html-eslint/no-multiple-empty-lines\": \"off\", \"@html-eslint/no-trailing-spaces\": \"off\", \"@html-eslint/quotes\": \"off\", \"@html-eslint/sort-attrs\": \"off\", }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rules",
          "declaration": {
            "name": "rules",
            "module": "custom-element-eslint-rules.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "custom-element-eslint-rules.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./src/index.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "loader.js",
      "declarations": [
        {
          "kind": "function",
          "name": "updateConfig",
          "parameters": [
            {
              "name": "config"
            }
          ],
          "description": "Update the lazy-loader configuration at runtime"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "updateConfig",
          "declaration": {
            "name": "updateConfig",
            "module": "loader.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "\"./radio-group/RadioGroup\""
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "\"./radio-button/RadioButton\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "\"./radio-group/RadioGroup\""
          }
        },
        {
          "kind": "js",
          "name": "ComplexObjectType",
          "declaration": {
            "name": "ComplexObjectType",
            "module": "\"./radio-group/RadioGroup\""
          }
        },
        {
          "kind": "js",
          "name": "InterfaceEventType",
          "declaration": {
            "name": "InterfaceEventType",
            "module": "\"./radio-group/RadioGroup\""
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "\"./radio-button/RadioButton\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/deprecated-element/DeprecatedElement.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DeprecatedElement",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "deprecated": "An example of a deprecated element",
          "tagName": "deprecated-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeprecatedElement",
          "declaration": {
            "name": "DeprecatedElement",
            "module": "dist/deprecated-element/DeprecatedElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/deprecated-element/deprecated-element.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "deprecated-element",
          "declaration": {
            "name": "DeprecatedElement",
            "module": "/dist/deprecated-element/DeprecatedElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/my-button/MyButton.js",
      "declarations": [
        {
          "kind": "class",
          "description": "\nA basic button element",
          "name": "MyButton",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyButton",
          "declaration": {
            "name": "MyButton",
            "module": "dist/my-button/MyButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/my-button/my-button.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "my-button",
          "declaration": {
            "name": "MyButton",
            "module": "/dist/my-button/MyButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/radio-button/RadioButton.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Direction"
        },
        {
          "kind": "class",
          "description": "",
          "name": "RadioButton",
          "slots": [
            {
              "description": "add text here to label your radio button",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The value assigned to the radio button. This will reflect in the radio group when clicked.",
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "position",
              "description": "Enum example"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "radio-button",
          "summary": "Radio buttons allow users to select a single option from a group. Here is its [documentation](https://my-site.com/documentation).\\n\\nUse it like this:\\n```html\\n<radio-button value=\"1\" disabled>Your label</radio-button>\\n```",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Direction",
          "declaration": {
            "name": "Direction",
            "module": "dist/radio-button/RadioButton.js"
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "dist/radio-button/RadioButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/radio-button/radio-button.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "dist/radio-button/radio-button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "/dist/radio-button/RadioButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/radio-group/RadioGroup.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ComplexObject",
          "type": {
            "text": "object"
          },
          "default": "{ /** Designates only a single <he-accordion-item> can be open a time. */ single: \"single\", /** Designates multiple <he-accordion-items> can be open simultaneously. */ multi: \"multi\", }"
        },
        {
          "kind": "class",
          "description": "\nRadio groups are used to group multiple radios or radio buttons, so they function as a single form control. Here is its [documentation](https://github.com/microsoft/vscode-custom-data/blob/master/samples/webcomponents/src/components/my-component/docs.md).\n\nUse it like this:\n```html\n<radio-group value=\"2\" size=\"3\">\n  <span slot=\"label\">My Label</span>\n  <radio-button value=\"1\">Option 1</radio-button>\n  <radio-button value=\"2\">Option 2</radio-button>\n  <radio-button value=\"3\">Option 3</radio-button>\n</radio-group>\n```",
          "name": "RadioGroup",
          "cssProperties": [
            {
              "type": {
                "text": "set:radiuses"
              },
              "description": "Controls the border radius of the radio buttons",
              "name": "--radio-border-radius"
            },
            {
              "description": "Controls the color of bar",
              "name": "--radio-background-color",
              "default": "red"
            }
          ],
          "cssParts": [
            {
              "description": "Applies custom styles the radio group label",
              "name": "radio-label"
            }
          ],
          "slots": [
            {
              "description": "add radio buttons to the `default` slot to create options to your radio group",
              "name": ""
            },
            {
              "description": "placeholder for the radio group label",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "description": "Validated the radio inputs"
            },
            {
              "kind": "method",
              "name": "checkStatus",
              "parameters": [
                {
                  "name": "value"
                },
                {
                  "name": "message"
                }
              ],
              "description": "This is a test method with parameters"
            },
            {
              "kind": "field",
              "name": "customTag",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "protectedMethod",
              "description": "This is a test method that is protected"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The value assigned to the radio button. This will reflect in the radio group when clicked.",
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "description": "This will control the size of the radio buttons",
              "default": "\"md\""
            },
            {
              "kind": "field",
              "name": "variants",
              "type": {
                "text": "string"
              },
              "description": "This is a test for internal options",
              "default": "\"primary\""
            },
            {
              "kind": "field",
              "name": "external",
              "type": {
                "text": "string"
              },
              "deprecated": "This is a test for external d.ts options",
              "default": "\"value1\""
            },
            {
              "kind": "field",
              "name": "deprecatedAttribute",
              "type": {
                "text": "string"
              },
              "deprecated": "This is a deprecated attribute",
              "default": "\"value1\""
            },
            {
              "kind": "field",
              "name": "external2",
              "type": {
                "text": "string"
              },
              "description": "This is a test for external .ts options",
              "default": "\"value4\""
            },
            {
              "kind": "field",
              "name": "external3",
              "type": {
                "text": "string"
              },
              "description": "This is a test for external .ts options",
              "default": "\"value8\""
            },
            {
              "kind": "field",
              "name": "complex",
              "type": {
                "text": "string"
              },
              "description": "This is a test for options from an object",
              "default": "\"single\""
            }
          ],
          "events": [
            {
              "description": "some description for custom-event",
              "name": "custom-event"
            },
            {
              "description": "some description for camelCaseEvent",
              "name": "camelCaseEvent"
            },
            {
              "type": {
                "text": "HTMLInputElement"
              },
              "description": "some description for typed-event",
              "name": "typed-event"
            },
            {
              "type": {
                "text": "InterfaceEventType"
              },
              "description": "(@deprecated) some description for typed-custom-event",
              "name": "typed-custom-event"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComplexObject",
          "declaration": {
            "name": "ComplexObject",
            "module": "dist/radio-group/RadioGroup.js"
          }
        },
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "dist/radio-group/RadioGroup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/radio-group/alt-types.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/radio-group/radio-group.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "dist/radio-group/radio-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "radio-group",
          "declaration": {
            "name": "RadioGroup",
            "module": "/dist/radio-group/RadioGroup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/DeprecatedElement.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "DeprecatedElement"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeprecatedElement",
          "declaration": {
            "name": "DeprecatedElement",
            "module": "dist/react/DeprecatedElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/MyButton.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "MyButton"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyButton",
          "declaration": {
            "name": "MyButton",
            "module": "dist/react/MyButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/RadioButton.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "RadioButton"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "dist/react/RadioButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/RadioGroup.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "RadioGroup"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "dist/react/RadioGroup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/ScopeProvider.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ScopeContext"
        },
        {
          "kind": "function",
          "name": "ScopeProvider",
          "parameters": [
            {
              "name": "{ prefix, suffix, children }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ScopeContext",
          "declaration": {
            "name": "ScopeContext",
            "module": "dist/react/ScopeProvider.js"
          }
        },
        {
          "kind": "js",
          "name": "ScopeProvider",
          "declaration": {
            "name": "ScopeProvider",
            "module": "dist/react/ScopeProvider.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./RadioGroup.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./RadioButton.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./DeprecatedElement.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./MyButton.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./ScopeProvider.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/react/react-utils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "useProperties",
          "parameters": [
            {
              "name": "targetElement"
            },
            {
              "name": "propName"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "kind": "function",
          "name": "useEventListener",
          "parameters": [
            {
              "name": "targetElement"
            },
            {
              "name": "eventName"
            },
            {
              "name": "eventHandler"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useProperties",
          "declaration": {
            "name": "useProperties",
            "module": "dist/react/react-utils.js"
          }
        },
        {
          "kind": "js",
          "name": "useEventListener",
          "declaration": {
            "name": "useEventListener",
            "module": "dist/react/react-utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/my-button/MyButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "\nA basic button element",
          "name": "MyButton",
          "members": [
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string | undefined"
              },
              "description": "Used to override the form owner's `action` attribute."
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "\"post\" | \"get\" | undefined"
              },
              "description": "Used to override the form owner's `method` attribute."
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Used to override the form owner's `novalidate` attribute."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyButton",
          "declaration": {
            "name": "MyButton",
            "module": "src/my-button/MyButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/my-button/my-button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "my-button",
          "declaration": {
            "name": "MyButton",
            "module": "/src/my-button/MyButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/deprecated-element/DeprecatedElement.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DeprecatedElement",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "deprecated": "An example of a deprecated element",
          "tagName": "deprecated-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeprecatedElement",
          "declaration": {
            "name": "DeprecatedElement",
            "module": "src/deprecated-element/DeprecatedElement.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/deprecated-element/deprecated-element.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "deprecated-element",
          "declaration": {
            "name": "DeprecatedElement",
            "module": "/src/deprecated-element/DeprecatedElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/radio-button/RadioButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RadioButton",
          "slots": [
            {
              "description": "add text here to label your radio button",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The value assigned to the radio button. This will reflect in the radio group when clicked."
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Disables the radio button"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "Target | undefined"
              },
              "description": "A lookup type for example"
            },
            {
              "kind": "field",
              "name": "for",
              "type": {
                "text": "string | undefined"
              },
              "description": "A mapped attribute for react wrapper example"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "string | undefined"
              },
              "description": "Enum example"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "radio-button",
          "summary": "Radio buttons allow users to select a single option from a group. Here is its [documentation](https://my-site.com/documentation).\\n\\nUse it like this:\\n```html\\n<radio-button value=\"1\" disabled>Your label</radio-button>\\n```",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/radio-button/RadioButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/radio-button/radio-button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/radio-button/radio-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "/src/radio-button/RadioButton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/radio-group/RadioGroup.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ComplexObject",
          "type": {
            "text": "{\n  /** Designates only a single <he-accordion-item> can be open a time. */\n  single: \"single\",\n\n  /** Designates multiple <he-accordion-items> can be open simultaneously. */\n  multi: \"multi\",\n}"
          },
          "default": "{ /** Designates only a single <he-accordion-item> can be open a time. */ single: \"single\", /** Designates multiple <he-accordion-items> can be open simultaneously. */ multi: \"multi\", }"
        },
        {
          "kind": "class",
          "description": "\nRadio groups are used to group multiple radios or radio buttons, so they function as a single form control. Here is its [documentation](https://github.com/microsoft/vscode-custom-data/blob/master/samples/webcomponents/src/components/my-component/docs.md).\n\nUse it like this:\n```html\n<radio-group value=\"2\" size=\"3\">\n  <span slot=\"label\">My Label</span>\n  <radio-button value=\"1\">Option 1</radio-button>\n  <radio-button value=\"2\">Option 2</radio-button>\n  <radio-button value=\"3\">Option 3</radio-button>\n</radio-group>\n```",
          "name": "RadioGroup",
          "cssProperties": [
            {
              "type": {
                "text": "set:radiuses"
              },
              "description": "Controls the border radius of the radio buttons",
              "name": "--radio-border-radius"
            },
            {
              "description": "Controls the color of bar",
              "name": "--radio-background-color",
              "default": "red"
            }
          ],
          "cssParts": [
            {
              "description": "Applies custom styles the radio group label",
              "name": "radio-label"
            }
          ],
          "slots": [
            {
              "description": "add radio buttons to the `default` slot to create options to your radio group",
              "name": ""
            },
            {
              "description": "placeholder for the radio group label",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The value assigned to the radio button. This will reflect in the radio group when clicked."
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Disables the radio group and all of its radio buttons"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "\"sm\" | \"md\" | \"lg\" | \"xl\""
              },
              "default": "\"md\"",
              "description": "This will control the size of the radio buttons"
            },
            {
              "kind": "field",
              "name": "variants",
              "type": {
                "text": "Variants"
              },
              "default": "\"primary\"",
              "description": "This is a test for internal options"
            },
            {
              "kind": "field",
              "name": "external",
              "type": {
                "text": "Test"
              },
              "default": "\"value1\"",
              "deprecated": "This is a test for external d.ts options"
            },
            {
              "kind": "field",
              "name": "deprecatedAttribute",
              "type": {
                "text": "Test"
              },
              "default": "\"value1\"",
              "deprecated": "This is a deprecated attribute"
            },
            {
              "kind": "field",
              "name": "external2",
              "type": {
                "text": "Example"
              },
              "default": "\"value4\"",
              "description": "This is a test for external .ts options"
            },
            {
              "kind": "field",
              "name": "external3",
              "type": {
                "text": "Test3"
              },
              "default": "\"value8\"",
              "description": "This is a test for external .ts options"
            },
            {
              "kind": "field",
              "name": "complex",
              "type": {
                "text": "ComplexObjectType"
              },
              "default": "\"single\"",
              "description": "This is a test for options from an object"
            },
            {
              "kind": "field",
              "name": "myAttribute",
              "type": {
                "text": "string | undefined"
              },
              "description": "This is a camel-case attribute"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "{\n    // The name.\n    name?: string;\n    /** The type. */\n    type?: string;\n    /** The value. */\n    value?: number;\n  } | undefined"
              },
              "description": "This is data object"
            },
            {
              "kind": "field",
              "name": "complexUnion",
              "type": {
                "text": "ChildSize | undefined"
              },
              "description": "This is a test for options from an object"
            },
            {
              "kind": "field",
              "name": "#privateProperty",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "\"Group\"",
              "description": "This is a test for a private property"
            },
            {
              "kind": "method",
              "name": "validate",
              "description": "Validated the radio inputs"
            },
            {
              "kind": "method",
              "name": "checkStatus",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "This is a test method with parameters"
            },
            {
              "kind": "method",
              "name": "#privateMethod",
              "privacy": "private",
              "description": "This is a test for a private method"
            },
            {
              "kind": "field",
              "name": "customTag",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "protectedMethod",
              "privacy": "protected",
              "description": "This is a test method that is protected"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "events": [
            {
              "description": "some description for custom-event",
              "name": "custom-event"
            },
            {
              "description": "some description for camelCaseEvent",
              "name": "camelCaseEvent"
            },
            {
              "type": {
                "text": "HTMLInputElement"
              },
              "description": "some description for typed-event",
              "name": "typed-event"
            },
            {
              "type": {
                "text": "InterfaceEventType"
              },
              "description": "(@deprecated) some description for typed-custom-event",
              "name": "typed-custom-event"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComplexObject",
          "declaration": {
            "name": "ComplexObject",
            "module": "src/radio-group/RadioGroup.ts"
          }
        },
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "src/radio-group/RadioGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/radio-group/alt-types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/radio-group/radio-group.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioGroup",
          "declaration": {
            "name": "RadioGroup",
            "module": "src/radio-group/radio-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "radio-group",
          "declaration": {
            "name": "RadioGroup",
            "module": "/src/radio-group/RadioGroup.js"
          }
        }
      ]
    }
  ]
}
